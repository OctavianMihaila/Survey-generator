<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.project.TestTema1" tests="74" skipped="0" failures="1" errors="0" timestamp="2022-11-27T14:11:01" hostname="kali" time="1.14">
  <properties/>
  <testcase name="testSubmitQuizUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.04"/>
  <testcase name="testDeleteQuizLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.065"/>
  <testcase name="testGetAllQuizezLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testGetQuestionNoPassword()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuizNameAlreadyExists()" classname="com.example.project.TestTema1" time="0.063"/>
  <testcase name="testQuestionAnswerHasNoAnswerFlag()" classname="com.example.project.TestTema1" time="0.029"/>
  <testcase name="testGetAllQuizezNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuizLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.02"/>
  <testcase name="testSubmitQuizNoId()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuestionLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.005"/>
  <testcase name="testQuestionAnswerHasNoDescription()" classname="com.example.project.TestTema1" time="0.01"/>
  <testcase name="testGetQuestionNotFound()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testDeleteQuizUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.003"/>
  <testcase name="testDummy()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testGetSolutionsNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testSubmitQuizLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.016"/>
  <testcase name="testCreateUserNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuizUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testSubmitQuizNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testSubmitQuizNotFound()" classname="com.example.project.TestTema1" time="0.014"/>
  <testcase name="testGetQuizDetailsNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuestionWithExistingName()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testGetSolutionsSuccessfully()" classname="com.example.project.TestTema1" time="0.063">
    <failure message="org.opentest4j.AssertionFailedError: expected: &lt;{'status':'ok','message':'[{&quot;quiz-id&quot; : &quot;1&quot;, &quot;quiz-name&quot; : &quot;Chestionarul 1&quot;, &quot;score&quot; : &quot;100&quot;, &quot;index_in_list&quot; : &quot;1&quot;}]'}&gt; but was: &lt;{'status':'ok','message':'TO DO: quiz-name + score + index'}&gt;" type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: expected: &lt;{'status':'ok','message':'[{&quot;quiz-id&quot; : &quot;1&quot;, &quot;quiz-name&quot; : &quot;Chestionarul 1&quot;, &quot;score&quot; : &quot;100&quot;, &quot;index_in_list&quot; : &quot;1&quot;}]'}&gt; but was: &lt;{'status':'ok','message':'TO DO: quiz-name + score + index'}&gt;
	at app//org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at app//org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
	at app//org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at app//org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at app//org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1124)
	at app//com.example.project.TestTema1.testGetSolutionsSuccessfully(TestTema1.java:2427)
	at java.base@17.0.5/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.5/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.5/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.5/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:205)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:201)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base@17.0.5/java.util.ArrayList.forEach(ArrayList.java:1511)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base@17.0.5/java.util.ArrayList.forEach(ArrayList.java:1511)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base@17.0.5/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.5/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.5/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.5/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="testSingleAnswerQuestionHasMultipleCorrectAnswers()" classname="com.example.project.TestTema1" time="0.009"/>
  <testcase name="testCreateQuizNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testGetAllQuestionsLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.004"/>
  <testcase name="testQuestionHasNoAnswers()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testGetQuestionLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.014"/>
  <testcase name="testGetAllQuestionsUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testGetQuizNoUsername()" classname="com.example.project.TestTema1" time="0.037"/>
  <testcase name="testGetAllQuizezUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testQuestionHasOnlyOneAnswer()" classname="com.example.project.TestTema1" time="0.005"/>
  <testcase name="testDeleteQuizSuccessfully()" classname="com.example.project.TestTema1" time="0.053"/>
  <testcase name="testGetAllQuestionsNoUsername()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testDeleteQuizNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuestionNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testDeleteQuizNotFound()" classname="com.example.project.TestTema1" time="0.015"/>
  <testcase name="testGetAllQuizezNoPassword()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testDeleteQuizNoId()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testGetQuizNotFound()" classname="com.example.project.TestTema1" time="0.004"/>
  <testcase name="testCreateQuestionSuccessfully()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testGetQuizUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateUserUserCreatedSuccesfully()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testGetSolutionsNoPassword()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testGetQuestionSuccessfully()" classname="com.example.project.TestTema1" time="0.006"/>
  <testcase name="testCreateUserNoPassword()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testGetQuizSuccessfully()" classname="com.example.project.TestTema1" time="0.02"/>
  <testcase name="testGetQuizDetailsUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testSubmitQuiz2Of3QuestionsAnswered()" classname="com.example.project.TestTema1" time="0.021"/>
  <testcase name="testQuestionDuplicateAnswers()" classname="com.example.project.TestTema1" time="0.004"/>
  <testcase name="testGetQuestionUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testSubmitQuizNoPassword()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testGetQuizDetailsNoPassword()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testCreateQuestionUsernameDoesNotExists()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testCreateQuizNoPassword()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testQuestionHasNoText()" classname="com.example.project.TestTema1" time="0.002"/>
  <testcase name="testSubmitQuizSuccessfully()" classname="com.example.project.TestTema1" time="0.018"/>
  <testcase name="testGetQuizNoPassword()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testGetSolutionsUserDoesNotExists()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testGetQuestionNoUsername()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testGetAllQuestionsNoPassword()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuizQuestionIdDoesNotExist()" classname="com.example.project.TestTema1" time="0.003"/>
  <testcase name="testDeleteQuizNoPassword()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuestionNoPassword()" classname="com.example.project.TestTema1" time="0.0"/>
  <testcase name="testGetAllQuizezSuccessfully()" classname="com.example.project.TestTema1" time="0.101"/>
  <testcase name="testGetSolutionsWrongCredentials()" classname="com.example.project.TestTema1" time="0.009"/>
  <testcase name="testCreateUserUserAlreadyExists()" classname="com.example.project.TestTema1" time="0.019"/>
  <testcase name="testGetAllQuestionsSuccessfully()" classname="com.example.project.TestTema1" time="0.094"/>
  <testcase name="testSubmitQuizAnsweredWrong()" classname="com.example.project.TestTema1" time="0.033"/>
  <testcase name="testSubmitQuiz1QuestionAnsweredWrong2QuestionsAnsweredCorectly()" classname="com.example.project.TestTema1" time="0.045"/>
  <testcase name="testGetQuizLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.005"/>
  <testcase name="testGetQuizDetailsLoginCredentialsAreWrong()" classname="com.example.project.TestTema1" time="0.001"/>
  <testcase name="testCreateQuizSuccessfully()" classname="com.example.project.TestTema1" time="0.015"/>
  <testcase name="testGetQuizDetailsSuccessfully()" classname="com.example.project.TestTema1" time="0.046"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
